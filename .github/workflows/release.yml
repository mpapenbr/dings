name: Release with goreleaser
on:
  workflow_dispatch:
  push:
    tags:
      - v*.*.*
jobs:
  collect-thc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - {src: x86_64, target: amd64}
          - {src: aarch64, target: arm64}
    steps:
      - name: get tiny health check
        run: |
          curl -L https://github.com/dmikusa/tiny-health-checker/releases/download/v0.35.0/thc-${{matrix.config.src}}-unknown-linux-musl -o ${{ runner.temp }}/thc.${{matrix.config.target}}
      - name: Upload health check artifacts
        uses: actions/upload-artifact@v4
        with:
          name: thc-${{matrix.config.target}}
          path: ${{ runner.temp }}/thc.${{matrix.config.target}}

  collect-grpc-health:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - amd64
          - arm64
    steps:
      - name: get grpc health check
        run: |
          curl -L https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.4.36/grpc_health_probe-linux-${{matrix.config}} -o ${{ runner.temp }}/grpc_health_probe.${{matrix.config}}
      - name: Upload health check artifacts
        uses: actions/upload-artifact@v4
        with:
          name: grpc-${{matrix.config}}
          path: ${{ runner.temp }}/grpc_health_probe.${{matrix.config}}




  goreleaser:
    needs:
      - collect-thc
      - collect-grpc-health
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Unshallow Fetch
        run: git fetch --prune --unshallow

      - name: Download thc health check artifacts (amd64)
        uses: actions/download-artifact@v4
        with:
          name: thc-amd64
          path: ext/healthcheck
      - name: Download thc health check artifacts (arm64)
        uses: actions/download-artifact@v4
        with:
          name: thc-arm64
          path: ext/healthcheck
      - name: Download grpc health check artifacts (amd64)
        uses: actions/download-artifact@v4
        with:
          name: grpc-amd64
          path: ext/healthcheck
      - name: Download grpc health check artifacts (arm64)
        uses: actions/download-artifact@v4
        with:
          name: grpc-arm64
          path: ext/healthcheck

      - name: add execute permissions
        run: chmod +x ext/healthcheck/*

      - name: show ext/healthcheck
        run: ls -la ext/healthcheck

      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: release-drafter/release-drafter@v6
        id: rd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: prepare changlog
        run: |
          echo "${{ steps.rd.outputs.body }}" > "${{ runner.temp }}/CHANGELOG.md"

      - name: Release via goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --release-notes="${{ runner.temp }}/CHANGELOG.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Note: The standard setting for the repository doesn't allow the default GITHUB_TOKEN to be used here
        # Either define a seperate Personal Access Token or permit the default GITHUB_TOKEN read/write access
        # see section "Workflow permissions" on https://github.com/mpapenbr/dings/settings/actions
